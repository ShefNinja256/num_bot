const API = "https://numbot-production.up.railway.app"; // —Ç–≤–æ–π Railway-–¥–æ–º–µ–Ω

function showResult(html){
  const r = document.getElementById("result");
  r.innerHTML = html;
  r.classList.remove("hidden");
  r.scrollIntoView({behavior:"smooth"});
}

// --- –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è (–æ–¥–∏–Ω) ---
async function analyzeSingle(){
  const date = document.getElementById("date_single").value.trim();
  if(!date) return alert("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É!");

  showLoader();

  try {
    const res = await fetch(`${API}/analyze`, {
      method:"POST",
      headers:{"Content-Type":"application/json"},
      body: JSON.stringify({date})
    });
    const data = await res.json();
    showResult(`<h3>üìÖ ${date}</h3><p>${data.interpretation}</p>`);
  } catch (err) {
    alert("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  } finally {
    hideLoader();
  }
}

// --- –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ---
async function analyzeCompat() {
  const d1 = document.getElementById("date_female").value.trim();
  const d2 = document.getElementById("date_male").value.trim();
  if (!d1 || !d2) return alert("–í–≤–µ–¥–∏—Ç–µ –æ–±–µ –¥–∞—Ç—ã!");

  showLoader();

  try {
    const res = await fetch(`${API}/compat`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ date1: d1, date2: d2 })
    });
    const data = await res.json();
    showResult(`<h3>üë© ${d1} + üë® ${d2}</h3><p>${data.interpretation}</p>`);
  } catch (err) {
    alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    console.error(err);
  } finally {
    hideLoader();
  }
}

// --- –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞ ---
async function analyzeNatal() {
  const date = document.getElementById("natal_date").value.trim();
  const time = document.getElementById("natal_time").value.trim();
  const place = document.getElementById("natal_place").value.trim();
  if (!date || !time || !place) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞—Ç—É, –≤—Ä–µ–º—è –∏ –º–µ—Å—Ç–æ!");

  showLoader();

  try {
    const res = await fetch(`${API}/natal`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ date, time, place })
    });
    const data = await res.json();
    showResult(`<h3>üó∫Ô∏è –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞</h3><p>${data.interpretation}</p>`);
  } catch (err) {
    alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    console.error(err);
  } finally {
    hideLoader();
  }
}

// --- –ì–æ—Ä–æ—Å–∫–æ–ø ---
async function getHoroscope() {
  const sign = document.getElementById("hs_sign").value;
  const period = document.getElementById("hs_period").value;

  showLoader();

  try {
    const res = await fetch(`${API}/horoscope`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ sign, period })
    });
    const data = await res.json();
    showResult(`<h3>‚ôà –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${sign} (${period})</h3><p>${data.interpretation}</p>`);
  } catch (err) {
    alert("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞.");
    console.error(err);
  } finally {
    hideLoader();
  }
}
// –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –∫–Ω–æ–ø–æ–∫ (–µ—Å–ª–∏ –≥–¥–µ-—Ç–æ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è)
function showSingle(){}; function showCompat(){};

// –ø–æ–∫–∞–∑–∞—Ç—å –∫—Ä—É—Ç–∏–ª–∫—É
function showLoader(){
  document.getElementById("loader").classList.remove("hidden");
  document.getElementById("result").classList.add("hidden");
}

// —Å–∫—Ä—ã—Ç—å –∫—Ä—É—Ç–∏–ª–∫—É
function hideLoader(){
  document.getElementById("loader").classList.add("hidden");
}
